<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.house.housebackapi.mapper.HouseMapper">
  <resultMap id="BaseResultMap" type="com.team.house.housebackapi.pojo.House">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="TYPE_ID" jdbcType="INTEGER" property="typeId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="PRICE" jdbcType="DECIMAL" property="price" />
    <result column="PUBDATE" jdbcType="DATE" property="pubdate" />
    <result column="FLOORAGE" jdbcType="INTEGER" property="floorage" />
    <result column="CONTACT" jdbcType="VARCHAR" property="contact" />
    <result column="STREET_ID" jdbcType="INTEGER" property="streetId" />
    <result column="ispass" jdbcType="INTEGER" property="ispass" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_ID, TYPE_ID, TITLE, DESCRIPTION, PRICE, PUBDATE, FLOORAGE, CONTACT, STREET_ID, 
    ispass, isdel, path
  </sql>
  <select id="selectByExample" parameterType="com.team.house.housebackapi.pojo.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from house
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.team.house.housebackapi.pojo.House">
    insert into house (ID, USER_ID, TYPE_ID, 
      TITLE, DESCRIPTION, PRICE, 
      PUBDATE, FLOORAGE, CONTACT, 
      STREET_ID, ispass, isdel, 
      path)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{pubdate,jdbcType=DATE}, #{floorage,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, 
      #{streetId,jdbcType=INTEGER}, #{ispass,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.team.house.housebackapi.pojo.House">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="title != null">
        TITLE,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="pubdate != null">
        PUBDATE,
      </if>
      <if test="floorage != null">
        FLOORAGE,
      </if>
      <if test="contact != null">
        CONTACT,
      </if>
      <if test="streetId != null">
        STREET_ID,
      </if>
      <if test="ispass != null">
        ispass,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=INTEGER},
      </if>
      <if test="ispass != null">
        #{ispass,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.house.housebackapi.pojo.House">
    update house
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        PUBDATE = #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        FLOORAGE = #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        CONTACT = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        STREET_ID = #{streetId,jdbcType=INTEGER},
      </if>
      <if test="ispass != null">
        ispass = #{ispass,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.house.housebackapi.pojo.House">
    update house
    set USER_ID = #{userId,jdbcType=INTEGER},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      TITLE = #{title,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      PUBDATE = #{pubdate,jdbcType=DATE},
      FLOORAGE = #{floorage,jdbcType=INTEGER},
      CONTACT = #{contact,jdbcType=VARCHAR},
      STREET_ID = #{streetId,jdbcType=INTEGER},
      ispass = #{ispass,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <!--查询当前用户下所有出租房信息并支持分页-->
  <select id="selectByCondition" parameterType="com.team.house.housebackapi.util.Condition" resultType="com.team.house.housebackapi.pojo.House">
    select
      `house`.id,
      `user_id` as userId,
      `type_id` as typeId,
      `title`,
      `description`,
      `price`,
      `pubdate`,
      `floorage`,
      `contact`,
      `street_id` as streetId,
      `type`.`NAME` as tname,
      `street`.`NAME` as sname,
      `district`.`NAME` as dname
    from
      `house`
      left join `type` on `house`.`TYPE_ID` = `type`.ID
      left join `street` on `house`.`STREET_ID` = `street`.ID
      left join `district` on `street`.`DISTRICT_ID` = `district`.`ID`
    where
      1 = 1
    <if test="title != null">
      and title like concat("%",#{title},"%")
    </if>
    <if test="districtId != null">
      and district.id = #{districtId}
    </if>
    <if test="streetId != null">
      and street_id = #{streetId}
    </if>
    <if test="typeId != null">
      and type_id = #{typeId}
    </if>
    <if test="startPrice != null">
      and price >= #{startPrice}
    </if>
    <if test="endPrice != null">
      and price &lt;= #{endPrice}
    </if>
  </select>

  <!--查询指定用户下所有出租房信息并支持分页-->
  <select id="selectByConditionAndUsers" parameterType="java.lang.Integer" resultType="com.team.house.housebackapi.pojo.House">
    select
      `house`.id,
      `user_id` as userId,
      `type_id` as typeId,
      `title`,
      `description`,
      `price`,
      `pubdate`,
      `floorage`,
      `contact`,
      `street_id` as streetId,
      `type`.`NAME` as tname,
      `street`.`NAME` as sname,
      `district`.`NAME` as dname,
      `path`
    from
      `house`
      left join `type` on `house`.`TYPE_ID` = `type`.ID
      left join `street` on `house`.`STREET_ID` = `street`.ID
      left join `district` on `street`.`DISTRICT_ID` = `district`.`ID`
    where
      `USER_ID` = #{userid}
  </select>

  <!--通过房屋id查询房屋信息-->
  <select id="getHouseById" parameterType="java.lang.String" resultType="com.team.house.housebackapi.pojo.House">
    select
      `house`.id,
      `user_id` as userId,
      `type_id` as typeId,
      `title`,
      `description`,
      `price`,
      `pubdate`,
      `floorage`,
      `contact`,
      `street_id` as streetId,
      `type`.`NAME` as tname,
      `street`.`NAME` as sname,
      `district`.`NAME` as dname,
      `path`
    from
      `house`
      left join `type` on `house`.`TYPE_ID` = `type`.ID
      left join `street` on `house`.`STREET_ID` = `street`.ID
      left join `district` on `street`.`DISTRICT_ID` = `district`.`ID`
    where
      `house`.id = #{houseid}
  </select>

  <!--通过房屋id查询房屋信息-->
  <select id="getSingleHouseById" parameterType="java.lang.String" resultType="com.team.house.housebackapi.pojo.House">
    select
      `id`,
      `title`,
      `type_id` as typeId,
      `floorage`,
      `price`,
      `pubdate`,
      ( select `district_id` from `street` where `street`.`id` = `house`.`street_id` ) as `districtid`,
      `street_id` as streetId,
      `contact`,
      `path`,
      `description`
    from
        `house`
    where
        `id` = #{houseid}
  </select>
</mapper>